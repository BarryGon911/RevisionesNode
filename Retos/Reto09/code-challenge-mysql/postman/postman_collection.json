{
  "info": {
    "name": "Reto09 - MySQL Relaciones API",
    "_postman_id": "reto09-mixf51iwdy",
    "description": "Colecci칩n de pruebas para Reto09 (MySQL con Sequelize): Autores, Libros y Rese침as. Usa {{baseUrl}} y variables capturadas entre requests.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "autorId",
      "value": ""
    },
    {
      "key": "libroId",
      "value": ""
    },
    {
      "key": "resenaId",
      "value": ""
    },
    {
      "key": "tituloRandom",
      "value": "Libro-R09-20250817015805"
    }
  ],
  "item": [
    {
      "name": "Smoke: GET /autores",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"Status 200 OK\", function(){ pm.response.to.have.status(200); });",
              "pm.test(\"JSON array\", function(){ pm.expect(Array.isArray(pm.response.json())).to.be.true; });"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/autores",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "autores"
          ]
        }
      }
    },
    {
      "name": "POST /autores (crear)",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"201 Created\", function(){ pm.expect([200,201]).to.include(pm.response.code); });",
              "const obj = pm.response.json();",
              "pm.collectionVariables.set(\"autorId\", obj.id || obj._id || obj.autorId);",
              "pm.test(\"Tiene id\", function(){ pm.expect(!!(obj.id||obj._id||obj.autorId)).to.be.true; });"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/autores",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "autores"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"nombre\": \"Autor R09\",\n  \"nacionalidad\": \"MX\",\n  \"fechaNacimiento\": \"1980-01-01\"\n}"
        }
      }
    },
    {
      "name": "GET /autores (listar)",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"200 OK\", function(){ pm.response.to.have.status(200); });",
              "const arr = pm.response.json();",
              "if (arr.length>0) {",
              "  const a = arr[arr.length-1];",
              "  pm.collectionVariables.set(\"autorId\", a.id || a._id || a.autorId);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/autores",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "autores"
          ]
        }
      }
    },
    {
      "name": "POST /libros (crear con autorId)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"autorId\"), \"Falta autorId: crea autor primero.\").to.be.ok;"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"Libro creado 201/200\", function(){ pm.expect([200,201]).to.include(pm.response.code); });",
              "const obj = pm.response.json();",
              "pm.collectionVariables.set(\"libroId\", obj.id || obj._id || obj.libroId);",
              "pm.test(\"Titulo coincide\", function(){ pm.expect(obj.titulo).to.include(pm.collectionVariables.get(\"tituloRandom\")); });"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/libros",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "libros"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"titulo\": \"{{tituloRandom}}\",\n  \"a침o\": 2024,\n  \"genero\": \"Ficcion\",\n  \"autorId\": \"{{autorId}}\"\n}"
        }
      }
    },
    {
      "name": "GET /libros/:id (detalle)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"libroId\"), \"Falta libroId\").to.be.ok;",
              "pm.request.url = pm.collectionVariables.get(\"baseUrl\") + \"/libros/\" + pm.collectionVariables.get(\"libroId\");"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"200 OK\", function(){ pm.response.to.have.status(200); });",
              "const obj = pm.response.json();",
              "pm.test(\"Incluye autor o autorId\", function(){ pm.expect(!!(obj.autor || obj.autorId)).to.be.true; });"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/libros/{{libroId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "libros",
            "{{libroId}}"
          ]
        }
      }
    },
    {
      "name": "PUT /libros/:id (actualizar)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"libroId\"), \"Falta libroId\").to.be.ok;",
              "pm.request.url = pm.collectionVariables.get(\"baseUrl\") + \"/libros/\" + pm.collectionVariables.get(\"libroId\");"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"200 OK\", function(){ pm.response.to.have.status(200); });",
              "pm.test(\"Genero actualizado\", function(){ pm.expect(pm.response.json().genero).to.eql(\"Drama\"); });"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/libros/{{libroId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "libros",
            "{{libroId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"genero\": \"Drama\"\n}"
        }
      }
    },
    {
      "name": "POST /resenas (crear rese침a)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"libroId\"), \"Falta libroId\").to.be.ok;",
              "pm.request.url = pm.collectionVariables.get(\"baseUrl\") + \"/libros/\" + pm.collectionVariables.get(\"libroId\");"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.test(\"201/200\", function(){ pm.expect([200,201]).to.include(pm.response.code); });",
              "const obj = pm.response.json();",
              "pm.collectionVariables.set(\"resenaId\", obj.id || obj._id || obj.resenaId);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/resenas",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "resenas"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"libroId\": \"{{libroId}}\",\n  \"calificacion\": 5,\n  \"comentario\": \"Excelente libro\"\n}"
        }
      }
    },
    {
      "name": "DELETE /resenas/:id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"resenaId\"), \"Falta resenaId\").to.be.ok;",
              "pm.request.url = pm.collectionVariables.get(\"baseUrl\") + \"/resenas/\" + pm.collectionVariables.get(\"resenaId\");"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('200 OK', function(){ pm.response.to.have.status(200); });"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/resenas/{{resenaId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "resenas",
            "{{resenaId}}"
          ]
        }
      }
    },
    {
      "name": "DELETE /libros/:id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get(\"libroId\"), \"Falta libroId\").to.be.ok;",
              "pm.request.url = pm.collectionVariables.get(\"baseUrl\") + \"/libros/\" + pm.collectionVariables.get(\"libroId\");"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('200 OK', function(){ pm.response.to.have.status(200); });"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/libros/{{libroId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "libros",
            "{{libroId}}"
          ]
        }
      }
    },
    {
      "name": "DELETE /autores/:id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "pm.expect(pm.collectionVariables.get('autorId'), 'Falta autorId').to.be.ok;",
              "pm.request.url = pm.collectionVariables.get('baseUrl') + '/autores/' + pm.collectionVariables.get('autorId');"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('200 OK', function(){ pm.response.to.have.status(200); });"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/autores/{{autorId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "autores",
            "{{autorId}}"
          ]
        }
      }
    }
  ]
}