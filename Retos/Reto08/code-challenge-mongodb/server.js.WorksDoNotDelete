import express from "express";
import rutas from "#routes/index.js";
import errorHandler from "#middlewares/errorHandler.js";
import { normalizarAnio } from "#middlewares/normalizarAnio.js";
import connectDB from "#config/database.js";

import dotenv from "dotenv";
dotenv.config();

const port = process.env.SRV_PORT || process.env.PORT || 3000;

// Normaliza BASE_PATH: siempre empieza con "/", sin dobles barras ni "/" final (excepto "/")
function normalizeBasePath(p) {
  let s = (p || "/").trim();
  if (!s.startsWith("/")) s = "/" + s;
  s = s.replace(/\/{2,}/g, "/");
  if (s.length > 1 && s.endsWith("/")) s = s.slice(0, -1);
  return s || "/";
}

const BASE_PATH = normalizeBasePath(process.env.BASE_PATH || "/");

try {
  await connectDB();
  console.log("MongoDB connection is OK");

  const app = express();
  app.use(express.json());
  app.use(normalizarAnio);

  // Monta tus rutas bajo el prefijo configurado
  app.use(BASE_PATH, rutas);

  // Manejo de errores (siempre al final)
  app.use(errorHandler);

  // Arranque + impresión de rutas
  app.listen(port, () => {
    const trailingSlash = BASE_PATH === "/" ? "/" : BASE_PATH + "/";
    console.log(`Base URL: http://localhost:${port}${trailingSlash}`);

    // Import dinámico del debugger (ruta relativa para evitar alias extra)
    import("./src/utils/routes-debug.js")
      .then(({ printRoutes }) => {
        printRoutes({
          app,
          router: rutas,          // fallback directo al router montado
          basePath: BASE_PATH     // pasa el prefijo normalizado (incluye "/...." si así lo definiste)
        });
      })
      .catch((err) => {
        console.warn("No pude imprimir rutas:", err?.message || err);
      });
  });
} catch (error) {
  console.error("MongoDB connection failed:", error?.stack || error);
  process.exit(1);
}