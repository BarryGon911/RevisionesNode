{
  "info": {
    "_postman_id": "630ff4c0-6274-41d7-b1c5-bcd4be308fd2",
    "name": "E-commerce API (Express + MongoDB)",
    "description": "Colección Postman para probar el backend conforme a la Rúbrica. Incluye auth JWT, paginación, roles, carrito y órdenes.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "token_admin",
      "value": "",
      "type": "string"
    },
    {
      "key": "token_client",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register (cliente)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Cliente Demo\", \"email\": \"cliente.demo+{{timestamp}}@example.com\", \"password\": \"Password123!\"}"
            },
            "description": "Crea un usuario cliente. No requiere token."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () { pm.response.to.have.status(201); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login (admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"admin@example.com\", \"password\": \"Password123!\"}"
            },
            "description": "Obtiene token de admin creado por el seed."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "var json = pm.response.json();",
                  "pm.expect(json).to.have.property('token');",
                  "pm.collectionVariables.set('token', json.token);",
                  "pm.collectionVariables.set('token_admin', json.token);",
                  "pm.test('Token guardado en variables', function(){ pm.expect(pm.collectionVariables.get('token')).to.be.a('string'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login (cliente)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"cliente.demo@example.com\", \"password\": \"Password123!\"}"
            },
            "description": "Si registras un cliente, ajusta el email; guarda token como token_client y token (por comodidad)."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "var json = pm.response.json();",
                  "pm.expect(json).to.have.property('token');",
                  "pm.collectionVariables.set('token', json.token);",
                  "pm.collectionVariables.set('token_client', json.token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Público",
      "item": [
        {
          "name": "Products - list (paginado)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Lista de productos pública con paginación."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.keys('page','limit','total','items');"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Categories - list",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Users - list (admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Categories - create (admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Categoria API {{timestamp}}\", \"description\": \"Creada desde Postman\"}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', () => pm.response.to.have.status(201));",
                  "var json = pm.response.json();",
                  "pm.collectionVariables.set('categoryId', json._id || json.id);",
                  "pm.test('categoryId guardado', ()=> pm.expect(pm.collectionVariables.get('categoryId')).to.exist);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Products - create (admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Producto API {{timestamp}}\", \"description\": \"Desc\", \"price\": 99.9, \"stock\": 10, \"category\": \"{{categoryId}}\"}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', () => pm.response.to.have.status(201));",
                  "var json = pm.response.json();",
                  "pm.collectionVariables.set('productId', json._id || json.id);",
                  "pm.test('productId guardado', ()=> pm.expect(pm.collectionVariables.get('productId')).to.exist);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Products - update (admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Producto API Editado {{timestamp}}\", \"description\": \"Actualizado\", \"price\": 79.9, \"stock\": 20, \"category\": \"{{categoryId}}\"}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Products - delete (admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Categories - update (admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories",
                "{{categoryId}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Categoria API Editada {{timestamp}}\", \"description\": \"Actualizada\"}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Categories - delete (admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories",
                "{{categoryId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Orders - list all (admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_admin}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Protegido (cliente)",
      "item": [
        {
          "name": "Users - me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "me"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Cart - get",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "cart"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Cart - add item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "cart",
                "items"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"productId\": \"{{productId}}\", \"quantity\": 2}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', () => pm.response.to.have.status(201));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Cart - update item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "cart",
                "items",
                "{{productId}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"quantity\": 3}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Cart - remove item",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "cart",
                "items",
                "{{productId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Orders - create (from cart)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', () => pm.response.to.have.status(201));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Orders - my",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/my",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "orders",
                "my"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', () => pm.response.to.have.status(200));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}